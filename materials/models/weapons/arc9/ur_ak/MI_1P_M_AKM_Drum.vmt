"VertexLitGeneric"
{
// maps
	"$basetexture"				"models/weapons/arc9/ur_ak\ak12_12_debug_color" // string -- main texture
	// "$bumpmap"					"models/weapons/arc9/ur_ak\ak12_1_debug_nrm" // string -- normal map texture (bump map for brushes)
	// "$phongexponenttexture"		"models/weapons/arc9/ur_ak\gb\vityaz\pp19_e" // string -- phong exponent texture (contains info for other shaders)

	"$phongwarptexture"			"models/weapons/arc9/ud_stalol\phongwarp_metal" // string -- phong gradient texture: 256x16 texture where x:0 = unlit, x:256 = fully lit (default is a perfect 0-256 black to white gradient)


// map interp
	//"$color2"					"[0.55 0.55 0.55]" // vector -- rgb tinting of the basetexture
	//"$blendTintByBaseAlpha"		"1" // bool -- uses base texture's alpha channel to mask color2's effect

// phong (convar: mat_phong "bool")
	"$phong"					"1" // bool -- phong enabler, have this on 1 if you have a central neural system
	"$phongboost"				"1" // float -- phong intensity coefficient on top of normal map's alpha (aka phong mask)
	"$phongfresnelranges"		"[0.32 0.72 0.99]" // vector -- phong fresnel ranges, default are [0 0.5 1]
	"$phongalbedotint" 			"1" // bool -- enables basetexture tinting of the phong's color but masks it with phongexponent's green channel

// rimlight (convar: mat_rimlight "bool")
	"$rimlight"					"1" // bool -- rimlight enabler, doesn't have to be on, use if needed
	///"$rimmask"					"1" // bool -- rimlight masking through exponent's alpha channel (use alpha vtf format)
	"$rimlightboost"			"0.5" // float -- rimlight intensity coefficient
	"$rimlightexponent"			"100" // float -- rimlight exponent

// envmap (convar: mat_specular "bool")
	"$envmap"					"env_cubemap" // string -- path to envmap or envmap entity name
	"$envmaptint"				"[ .01 .01 .01 ]" // vector -- rgb tinting of the envmap: all dimentions should be equal, ideally
}
