"VertexLitGeneric"
{
// maps
	"$basetexture" "models/UC/attachments/uc_1x_c"
	"$bumpmap" "models/UC/attachments/uc_1x_n"
	"$phongexponenttexture" "models/UC/attachments/uc_1x_m"
	"$phongwarptexture"			"models/weapons/arc9/ud_stalol/phongwarp_metal" // string -- phong gradient texture: 256x16 texture where x:0 = unlit, x:256 = fully lit (default is a perfect 0-256 black to white gradient)
	"$nocull"					"1"
	"$halflambert"              "1"
	
// map interp
    "$color2"					"[0.5 0.5 0.5]" // vector -- rgb tinting of the basetexture
	"$blendTintByBaseAlpha"		"1" // bool -- uses base texture's alpha channel to mask color2's effect

// phong (convar: mat_phong "bool")
	"$phong"					"1" // bool -- phong enabler, have this on 1 if you have a central neural system
	"$phongboost"				"5" // float -- phong intensity coefficient on top of normal map's alpha (aka phong mask)
	"$phongfresnelranges"		"[1 4 8]" // vector -- phong fresnel ranges, default are [0 0.5 1]
	"$phongalbedotint" 			"1" // bool -- enables basetexture tinting of the phong's color but masks it with phongexponent's green channel
	"$phongexponent"	        "8"

// rimlight (convar: mat_rimlight "bool")
	"$rimlight"					"1" // bool -- rimlight enabler, doesn't have to be on, use if needed
	"$rimmask"					"1" // bool -- rimlight masking through exponent's alpha channel (use alpha vtf format)
	"$rimlightboost"			"0.4" // float -- rimlight intensity coefficient
	"$rimlightexponent"			"20" // float -- rimlight exponent
	
	// envmap (convar: mat_specular "bool")
	"$envmap"					"env_cubemap" // string -- path to envmap or envmap entity name
	"$envmaptint"				"[ 0.005 0.005 0.005 ]" // vector -- rgb tinting of the envmap: all dimentions should be equal, ideally
}